name: HorusecSecurityPipeline

on:
  push:
    branches: [ "main", "develop", "master" ]
  pull_request:
    branches: [ "main", "develop", "master" ]

jobs:
  horusec-security:
    name: Run Horusec Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Horusec
      run: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
    - name: Run Horusec Scan (Generate JSON and SARIF separately, disabling Docker)
      id: scan
      run: |
        # Generate JSON report, disabling Docker for compatible tools
        horusec start -p="./" \
          --output-format="json" \
          --json-output-file="horusec_report.json" \
          --ignore-severity="LOW,MEDIUM" \
          --ignore="**/vendor/**,**/node_modules/**" \
          --return-error=false \
          --disable-docker # Added this flag to prevent Docker-related errors
        # Generate SARIF report, disabling Docker for compatible tools
        horusec start -p="./" \
          --output-format="sarif" \
          --json-output-file="horusec_report.sarif" \
          --ignore-severity="LOW,MEDIUM" \
          --ignore="**/vendor/**,**/node_modules/**" \
          --return-error=false \
          --disable-docker # Added this flag to prevent Docker-related errors
    - name: Upload SARIF to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: horusec_report.sarif
      if: always() # Ensures this step runs even if the scan had an error

    - name: Upload Reports as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: horusec-security-reports
        path: |
          horusec_report.json
          horusec_report.sarif
      if: always() # Ensures this step runs even if the scan had an error
